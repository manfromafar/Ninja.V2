#ifndef __HANDLER_HPP__
#define __HANDLER_HPP__

#ifndef HANDLER_PROCESS
#define HANDLER_PROCESS(x) int Handlers:: ## x ## ::process( struct MHD_Connection *connection, Request *req, Response *resp )
#endif

#include "Request.hpp"
#include "Response.hpp"
#include "ReqResp.hpp"

#include <microhttpd.h>
#include <string>

class Handler {
	public:
		virtual ~Handler();

		virtual Handler *route( struct MHD_Connection *connection, Request *req, Response *resp );
	
		virtual int post_processor( void *coninfo_cls, enum MHD_ValueKind kind, const char *key, const char *filename, const char *content_type, const char *transfer_encoding, const char *data, uint64_t off, size_t size );
		
		virtual int process_headers( struct MHD_Connection *connection, Request *req, Response *resp );
		virtual int process( struct MHD_Connection *connection, Request *req, Response *resp ) =0;
		
		virtual void cleanup();

		static void init() { };
};

#endif
